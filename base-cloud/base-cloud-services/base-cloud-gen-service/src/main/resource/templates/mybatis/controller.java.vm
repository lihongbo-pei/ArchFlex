package ${tableInfo.controllerPackageName};

import com.adtec.rdc.base.common.annotation.SysLog;
import com.adtec.rdc.base.common.constants.ServiceNameConstants;
import com.adtec.rdc.base.common.util.ApiResult;
import ${tableInfo.poPackageName}.${tableInfo.className};
import ${tableInfo.queryPackageName}.${tableInfo.className}Query;
import ${tableInfo.servicePackageName}.${tableInfo.className}Service;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * @author $tableInfo.authorName
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${tableInfo.funcName}")
@Api(value = "${tableInfo.funcDesc}controller", tags = {"${tableInfo.funcDesc}操作接口"})
public class $!{tableInfo.className}Controller {
	private static final String FUNC_NAME = "${tableInfo.funcDesc}功能";

    @Autowired
    private ${tableInfo.className}Service service;

    @SysLog(serviceId = ServiceNameConstants.BASE_CLOUD_USER_SERVICE, moduleName = FUNC_NAME, actionName = "添加${tableInfo.funcDesc}")
    @ApiOperation(value = "添加${tableInfo.funcDesc}", notes = "${tableInfo.funcDesc}信息", httpMethod = "POST")
    @ApiImplicitParam(name = "${tableInfo.funcName}", value = "${tableInfo.funcDesc}信息", required = true, dataType = "${tableInfo.className}")
    @PostMapping
    public ApiResult<Boolean> save(@RequestBody ${tableInfo.className} ${tableInfo.funcName}){
        return new ApiResult<>(service.save(${tableInfo.funcName}));
    }

    @SysLog(serviceId = ServiceNameConstants.BASE_CLOUD_USER_SERVICE, moduleName = FUNC_NAME, actionName = "修改${tableInfo.funcDesc}")
    @ApiOperation(value = "修改${tableInfo.funcDesc}", notes = "${tableInfo.funcDesc}信息", httpMethod = "PUT")
    @ApiImplicitParam(name = "${tableInfo.funcName}", value = "${tableInfo.funcDesc}信息", required = true, dataType = "${tableInfo.className}")
    @PutMapping
    public ApiResult<Boolean> update(@RequestBody ${tableInfo.className} ${tableInfo.funcName}){
        return new ApiResult<>(service.updateById(${tableInfo.funcName}));
    }

    @SysLog(serviceId = ServiceNameConstants.BASE_CLOUD_USER_SERVICE, moduleName = FUNC_NAME, actionName = "删除${tableInfo.funcDesc}")
    @ApiOperation(value = "删除${tableInfo.funcDesc}", notes = "删除${tableInfo.funcDesc}信息", httpMethod = "DELETE")
    @ApiImplicitParam(name = "id", value = "${tableInfo.funcDesc}id", required = true, dataType = "string")
    @DeleteMapping("/{id}")
    public ApiResult<Boolean> delete(@PathVariable("id") String id){
        return new ApiResult<>(service.removeById(id));
    }

    @SysLog(serviceId = ServiceNameConstants.BASE_CLOUD_USER_SERVICE, moduleName = FUNC_NAME, actionName = "通过主键查询${tableInfo.funcDesc}信息")
    @ApiOperation(value = "查询${tableInfo.funcDesc}信息", notes = "通过主键查询${tableInfo.funcDesc}信息", httpMethod = "GET")
    @ApiImplicitParam(name = "id", value = "${tableInfo.funcDesc}id", required = true, dataType = "string")
    @GetMapping("/{id}")
    public ApiResult<${tableInfo.className}> getById(@PathVariable("id") String id){
        return new ApiResult<>(service.getById(id));
    }

    @ApiOperation(value = "${tableInfo.funcDesc}信息分页查询", notes = "${tableInfo.funcDesc}信息分页查询", httpMethod = "GET")
    @ApiImplicitParam(name = "query", value = "${tableInfo.funcDesc}信息查询类", required = false, dataType = "${tableInfo.className}Query")
    @GetMapping("/page")
    public ApiResult<${tableInfo.className}Query> pageByQuery(${tableInfo.className}Query query){
        return new ApiResult<>(service.pageByQuery(query));
    }	
}
